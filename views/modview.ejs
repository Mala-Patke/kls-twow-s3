<html>
    <head>

    </head>
    <body>
        Round ID: <input id = "round" value="<%- config.round %>"><br>
        Mode: <select id="mode"> 
            <option value="demo">Demo</option>
            <option value="maintenance">Maintenance</option>
            <option value="respond">Respond</option>
            <option value="vote">Vote</option>
        </select><br>
        Prompt: <input style = "width: 500px;" id = "prompt" value ="<%- config.prompt %>"><br>
        Allow New Users?: <select id="ANU">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </select><br>
        Responses Per Screen:<input id = "screen" value ="<%- config.resp_per_screen %>"><br>
        Top 10 of last week:<br>
        <div id = "lr">
            <% for(let i = 1; i <= 10; i++) { %>
                <% let entry = Object.entries(config.leaderboard.comp) %>
                <input id = "lrn<%-i%>"  value = "<%-entry[i-1] ? entry[i-1][0] : ""%>">
                <input id = "lrs<%-i%>"  value = "<%-entry[i-1] ? entry[i-1][0] : ""%>">
                <br>
            <% } %>
        </div>
        Top 10 of all time:<br>
        <div id = "comp">
            <% for(let i = 1; i <= 10; i++) { %>
                <% let entry = Object.entries(config.leaderboard.comp) %>
                <input id = "compn<%-i%>" value = "<%-entry[i-1] ? entry[i-1][0] : ""%>">
                <input id = "comps<%-i%>" value = "<%-entry[i-1] ? entry[i-1][1] : ""%>">
                <br>
            <% } %>       
        </div>
        <button id = "submit">Submit Changes</button>
    </body> 

    <script>
        window.onload = () => {
            Array.from(document.getElementById('mode').children)
                .find(e => e.value === '<%-config.mode%>')
                .setAttribute('selected', '');

            Array.from(document.getElementById('ANU').children)
                .find(e => e.value === ('<%-config.allowingNewUsers%>' === 'true' ? 'Yes' : 'No'))
                .setAttribute('selected', '');

        }

        document.getElementById('submit').addEventListener('click', () => {
            let lbobj = {
                lr:{},
                comp:{}
            };
            for(let i = 1; i <= 10; i++){
                let lrn = document.getElementById(`lrn${i}`).value;
                if(lrn.trim().length) {
                    Object.defineProperty(lbobj.lr, lrn, {
                        value: lrn,
                        enumerable: true
                    });
                }
                let comp = document.getElementById(`comps${i}`).value;
                if(comp.trim().length){ 
                    Object.defineProperty(lbobj.comp, comp, {
                        value: comp,
                        enumerable: true
                    });
                }
            }
            fetch('/api/updateconfig', {
                method: 'POST',
                body: JSON.stringify({
                    'round': document.getElementById('round').value,
                    'mode': document.getElementById('mode').value,
                    'prompt': document.getElementById('prompt').value,
                    'resp_per_screen': document.getElementById('screen').value,
                    'allowingNewUsers': document.getElementById('ANU').value === "Yes",
                    'leaderboard': lbobj
                }),
                headers: {
                    'Content-Type':'text/plain'
                }
            }).then(() => window.location.href = '/')
        });
    </script>
</html>